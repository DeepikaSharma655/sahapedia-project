{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\nextjs\\\\sahapedia-project\\\\pages\\\\museum-events.js\",\n    _this = this;\n\nimport Layout from '../components/Layout.js';\n\nvar Blog = function Blog(_ref) {\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c = Blog;\nexport var __N_SSG = true;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["D:/nextjs/sahapedia-project/pages/museum-events.js"],"names":["Layout","Blog","posts","map","post","title"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBAEX,QAAC,MAAD;AAAQ,IAAA,OAAO,eAEb;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,4BACT;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,WAFW;AAAA,CAAb,C,CAWA;AACA;AACA;;;KAbMJ,I;;AA6BN,eAAeA,IAAf","sourcesContent":["import Layout from '../components/Layout.js'\r\n\r\n\r\nconst Blog = ({ posts }) => (\r\n \r\n  <Layout content={(\r\n    \r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li>{post.title}</li>\r\n      ))}\r\n    </ul>\r\n  )} />\r\n)\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://www.museumsofindia.org/sp/events')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Blog\r\n"]},"metadata":{},"sourceType":"module"}