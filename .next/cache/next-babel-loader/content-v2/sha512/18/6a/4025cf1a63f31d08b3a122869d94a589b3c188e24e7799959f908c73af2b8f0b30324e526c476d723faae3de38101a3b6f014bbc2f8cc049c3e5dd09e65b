{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\nextjs\\\\sahapedia-project\\\\pages\\\\museum-events.js\",\n    _this = this;\n\nimport dynamic from 'next/dynamic';\nvar DynamicComponentWithCustomLoading = dynamic(_c = function _c() {\n  return import('../components/navbar');\n}, {\n  loading: function loading() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 20\n    }, _this);\n  },\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/navbar')];\n    },\n    modules: ['../components/navbar']\n  }\n}); // posts will be populated at build time by getStaticProps()\n\n_c2 = DynamicComponentWithCustomLoading;\n\nfunction Blog(_ref) {\n  var _this2 = this;\n\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DynamicComponentWithCustomLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(function (post) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, _this2);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 4\n  }, this);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\n_c3 = Blog;\nexport var __N_SSG = true;\nexport default Blog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DynamicComponentWithCustomLoading$dynamic\");\n$RefreshReg$(_c2, \"DynamicComponentWithCustomLoading\");\n$RefreshReg$(_c3, \"Blog\");","map":{"version":3,"sources":["D:/nextjs/sahapedia-project/pages/museum-events.js"],"names":["dynamic","DynamicComponentWithCustomLoading","loading","Blog","posts","map","post","title"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,IAAMC,iCAAiC,GAAGD,OAAO,MAC/C;AAAA,SAAM,OAAO,sBAAP,CAAN;AAAA,CAD+C,EAE/C;AAAEE,EAAAA,OAAO,EAAE;AAAA,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAN;AAAA,GAAX;AAAA;AAAA;AAAA,kCADa,sBACb;AAAA;AAAA,cADa,sBACb;AAAA;AAAA,CAF+C,CAAjD,C,CAIA;;MAJMD,iC;;AAKN,SAASE,IAAT,OAAyB;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEC;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,4BACT;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUA,C,CAED;AACA;AACA;;;MAfSJ,I;;AA+BT,eAAeA,IAAf","sourcesContent":["import dynamic from 'next/dynamic'\r\n\r\nconst DynamicComponentWithCustomLoading = dynamic(\r\n  () => import('../components/navbar'),\r\n  { loading: () => <p>...</p> }\r\n)\r\n// posts will be populated at build time by getStaticProps()\r\nfunction Blog({ posts }) {\r\n return (\r\n   <div className=\"container\">\r\n     <DynamicComponentWithCustomLoading />\r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li>{post.title}</li>\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://www.museumsofindia.org/sp/events')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Blog\r\n"]},"metadata":{},"sourceType":"module"}