{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\nextjs\\\\sahapedia-project\\\\pages\\\\museum-events.js\";\nimport dynamic from 'next/dynamic';\nconst DynamicComponentWithCustomLoading = dynamic(() => import('./components/navbar'), {\n  loading: () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 20\n  }, this),\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./components/navbar')],\n    modules: ['./components/navbar']\n  }\n}); // posts will be populated at build time by getStaticProps()\n\nfunction Blog({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DynamicComponentWithCustomLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 4\n  }, this);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://www.museumsofindia.org/sp/events');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["D:/nextjs/sahapedia-project/pages/museum-events.js"],"names":["dynamic","DynamicComponentWithCustomLoading","loading","Blog","posts","map","post","title","getStaticProps","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,MAAMC,iCAAiC,GAAGD,OAAO,CAC/C,MAAM,OAAO,qBAAP,CADyC,EAE/C;AAAEE,EAAAA,OAAO,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA;AAAA,wCADa,qBACb;AAAA,cADa,qBACb;AAAA;AAAA,CAF+C,CAAjD,C,CAIA;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,iCAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEC;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUA,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAAD,CAAvB;AACA,QAAMN,KAAK,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAApB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLR,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["import dynamic from 'next/dynamic'\r\n\r\nconst DynamicComponentWithCustomLoading = dynamic(\r\n  () => import('./components/navbar'),\r\n  { loading: () => <p>...</p> }\r\n)\r\n// posts will be populated at build time by getStaticProps()\r\nfunction Blog({ posts }) {\r\n return (\r\n   <div className=\"container\">\r\n     <DynamicComponentWithCustomLoading />\r\n    <ul>\r\n      {posts.map((post) => (\r\n        <li>{post.title}</li>\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://www.museumsofindia.org/sp/events')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Blog\r\n"]},"metadata":{},"sourceType":"module"}