{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"D:/nextjs/sahapedia-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\nextjs\\\\sahapedia-project\\\\pages\\\\autocomplete.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport HomeMuseum from '../lib/all_museums.json';\nimport citiesdata from '../lib/cities-api.json';\n\nvar BasicAutoSuggest = /*#__PURE__*/function (_React$Component) {\n  _inherits(BasicAutoSuggest, _React$Component);\n\n  var _super = _createSuper(BasicAutoSuggest);\n\n  function BasicAutoSuggest() {\n    var _this;\n\n    _classCallCheck(this, BasicAutoSuggest);\n\n    _this = _super.call(this); //Define state for value and suggestion collection\n\n    _defineProperty(_assertThisInitialized(_this), \"HomeMuseumData\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"createobjectforAutocomplete\", function () {\n      HomeMuseum.map(function (item) {\n        return _this.HomeMuseumData.push({\n          title: item.title + \" - \" + _this.FindCityById(citiesdata, item.field_city_1),\n          id: item.nid,\n          type: \"museums\"\n        });\n      });\n      citiesdata.map(function (item) {\n        return _this.HomeMuseumData.push({\n          title: item.name[0].value,\n          id: item.tid[0].value,\n          type: \"city\"\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSuggestions\", function (value) {\n      var inputValue = value.trim().toLowerCase();\n      var inputLength = inputValue.length;\n      return inputLength === 0 ? [] : _this.HomeMuseumData.filter(function (lang) {\n        return lang.title.toLowerCase().slice(0, inputLength) === inputValue;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSuggestionValue\", function (suggestion) {\n      return suggestion.title;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"FindCityById\", function (data, email) {\n      var el = data.find(function (el) {\n        return el.tid[0].value == email;\n      }); // Possibly returns `undefined`\n\n      return el && el.name[0].value; // so check result is truthy and extract `id`\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSuggestion\", function (suggestion) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: suggestion.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuggestionsFetchRequested\", function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: _this.getSuggestions(value)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuggestionsClearRequested\", function () {\n      _this.setState({\n        suggestions: []\n      });\n    });\n\n    _this.state = {\n      value: '',\n      suggestions: []\n    };\n\n    _this.createobjectforAutocomplete();\n\n    return _this;\n  }\n\n  _createClass(BasicAutoSuggest, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions; // Option props\n\n      var inputProps = {\n        placeholder: 'Search..',\n        value: value,\n        onChange: this.onChange\n      }; // Adding AutoSuggest component\n\n      return /*#__PURE__*/_jsxDEV(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return BasicAutoSuggest;\n}(React.Component);\n\nexport default BasicAutoSuggest;","map":{"version":3,"sources":["D:/nextjs/sahapedia-project/pages/autocomplete.js"],"names":["React","Autosuggest","HomeMuseum","citiesdata","BasicAutoSuggest","map","item","HomeMuseumData","push","title","FindCityById","field_city_1","id","nid","type","name","value","tid","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","suggestion","data","email","el","find","event","newValue","setState","suggestions","getSuggestions","state","createobjectforAutocomplete","inputProps","placeholder","onChange","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport HomeMuseum from '../lib/all_museums.json'\r\nimport citiesdata from '../lib/cities-api.json';\r\nclass BasicAutoSuggest extends React.Component {\r\n    HomeMuseumData=[];\r\n    constructor() {\r\n        super();\r\n\r\n        //Define state for value and suggestion collection\r\n        this.state = {\r\n            value: '',\r\n            suggestions: []\r\n        };\r\n       this.createobjectforAutocomplete()\r\n    }\r\n    createobjectforAutocomplete = ()=>{\r\n        \r\n\r\n        HomeMuseum.map(item=>(\r\n            this.HomeMuseumData.push({\r\n                \r\n                title : item.title + \" - \"+ this.FindCityById(citiesdata,item.field_city_1),\r\n                id: item.nid,\r\n                type:\"museums\"\r\n\r\n            })  \r\n        ));\r\n        citiesdata.map(item=>(\r\n            this.HomeMuseumData.push({\r\n                \r\n                title : item.name[0].value ,\r\n                id: item.tid[0].value,\r\n                type:\"city\"\r\n\r\n            })  \r\n        ));\r\n\r\n    };\r\n\r\n    // HomeMuseumData = HomeMuseum;\r\n     \r\n    // // Collection of data\r\n    // cars = HomeMuseum;\r\n    // Filter logic\r\n    getSuggestions = value => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : this.HomeMuseumData.filter(lang =>\r\n            lang.title.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    // Trigger suggestions\r\n    getSuggestionValue = suggestion => suggestion.title;\r\n    FindCityById =(data, email) => {\r\n        const el = data.find(el => el.tid[0].value == email); // Possibly returns `undefined`\r\n        return el && el.name[0].value; // so check result is truthy and extract `id`\r\n      }\r\n    // Render Each Option\r\n    renderSuggestion = suggestion => (\r\n        \r\n        <div>\r\n             \r\n            {suggestion.title}\r\n        </div>\r\n    );\r\n\r\n    // OnChange event handler\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    // Suggestion rerender when user types\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    // Triggered on clear\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n\r\n        // Option props\r\n        const inputProps = {\r\n            placeholder: 'Search..',\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        // Adding AutoSuggest component\r\n        return (\r\n            <Autosuggest\r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={this.getSuggestionValue}\r\n                renderSuggestion={this.renderSuggestion}\r\n                inputProps={inputProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicAutoSuggest;"]},"metadata":{},"sourceType":"module"}