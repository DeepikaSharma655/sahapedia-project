{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\nextjs\\\\sahapedia-project\\\\pages\\\\autocomplete.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport HomeMuseum from '../lib/all_museums.json';\nimport citiesdata from '../lib/cities-api.json';\n\nclass BasicAutoSuggest extends React.Component {\n  constructor() {\n    super(); //Define state for value and suggestion collection\n\n    _defineProperty(this, \"HomeMuseumData\", []);\n\n    _defineProperty(this, \"createobjectforAutocomplete\", () => {\n      HomeMuseum.map(item => this.HomeMuseumData.push({\n        title: item.title + \" - \" + this.FindCityById(citiesdata, item.field_city_1),\n        id: item.nid,\n        type: \"museums\"\n      }));\n      citiesdata.map(item => this.HomeMuseumData.push({\n        title: item.name[0].value,\n        id: item.tid[0].value,\n        type: \"city\"\n      }));\n    });\n\n    _defineProperty(this, \"getSuggestions\", value => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n      return inputLength === 0 ? [] : this.HomeMuseumData.filter(lang => lang.title.toLowerCase().slice(0, inputLength) === inputValue);\n    });\n\n    _defineProperty(this, \"getSuggestionValue\", suggestion => suggestion.title);\n\n    _defineProperty(this, \"FindCityById\", (data, email) => {\n      const el = data.find(el => el.tid[0].value == email); // Possibly returns `undefined`\n\n      return el && el.name[0].value; // so check result is truthy and extract `id`\n    });\n\n    _defineProperty(this, \"renderSuggestion\", suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestion.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this));\n\n    _defineProperty(this, \"onChange\", (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    });\n\n    _defineProperty(this, \"onSuggestionsFetchRequested\", ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    });\n\n    _defineProperty(this, \"onSuggestionsClearRequested\", () => {\n      this.setState({\n        suggestions: []\n      });\n    });\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n    this.createobjectforAutocomplete();\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state; // Option props\n\n    const inputProps = {\n      placeholder: 'Search..',\n      value,\n      onChange: this.onChange\n    }; // Adding AutoSuggest component\n\n    return /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BasicAutoSuggest;","map":{"version":3,"sources":["D:/nextjs/sahapedia-project/pages/autocomplete.js"],"names":["React","Autosuggest","HomeMuseum","citiesdata","BasicAutoSuggest","Component","constructor","map","item","HomeMuseumData","push","title","FindCityById","field_city_1","id","nid","type","name","value","tid","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","suggestion","data","email","el","find","event","newValue","setState","suggestions","getSuggestions","state","createobjectforAutocomplete","render","inputProps","placeholder","onChange","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport HomeMuseum from '../lib/all_museums.json'\r\nimport citiesdata from '../lib/cities-api.json';\r\nclass BasicAutoSuggest extends React.Component {\r\n    HomeMuseumData=[];\r\n    constructor() {\r\n        super();\r\n\r\n        //Define state for value and suggestion collection\r\n        this.state = {\r\n            value: '',\r\n            suggestions: []\r\n        };\r\n       this.createobjectforAutocomplete()\r\n    }\r\n    createobjectforAutocomplete = ()=>{\r\n        \r\n\r\n        HomeMuseum.map(item=>(\r\n            this.HomeMuseumData.push({\r\n                \r\n                title : item.title + \" - \"+ this.FindCityById(citiesdata,item.field_city_1),\r\n                id: item.nid,\r\n                type:\"museums\"\r\n\r\n            })  \r\n        ));\r\n        citiesdata.map(item=>(\r\n            this.HomeMuseumData.push({\r\n                \r\n                title : item.name[0].value ,\r\n                id: item.tid[0].value,\r\n                type:\"city\"\r\n\r\n            })  \r\n        ));\r\n\r\n    };\r\n\r\n    // HomeMuseumData = HomeMuseum;\r\n     \r\n    // // Collection of data\r\n    // cars = HomeMuseum;\r\n    // Filter logic\r\n    getSuggestions = value => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : this.HomeMuseumData.filter(lang =>\r\n            lang.title.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    // Trigger suggestions\r\n    getSuggestionValue = suggestion => suggestion.title;\r\n    FindCityById =(data, email) => {\r\n        const el = data.find(el => el.tid[0].value == email); // Possibly returns `undefined`\r\n        return el && el.name[0].value; // so check result is truthy and extract `id`\r\n      }\r\n    // Render Each Option\r\n    renderSuggestion = suggestion => (\r\n        \r\n        <div>\r\n             \r\n            {suggestion.title}\r\n        </div>\r\n    );\r\n\r\n    // OnChange event handler\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue\r\n        });\r\n    };\r\n\r\n    // Suggestion rerender when user types\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        this.setState({\r\n            suggestions: this.getSuggestions(value)\r\n        });\r\n    };\r\n\r\n    // Triggered on clear\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n\r\n        // Option props\r\n        const inputProps = {\r\n            placeholder: 'Search..',\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        // Adding AutoSuggest component\r\n        return (\r\n            <Autosuggest\r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                getSuggestionValue={this.getSuggestionValue}\r\n                renderSuggestion={this.renderSuggestion}\r\n                inputProps={inputProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicAutoSuggest;"]},"metadata":{},"sourceType":"module"}